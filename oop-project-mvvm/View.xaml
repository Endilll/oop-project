<Window x:Class="OopProjectMvvm.View"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OopProjectMvvm"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="727.285" ResizeMode="NoResize" Name="Window">
    <Window.DataContext>
        <local:ViewModel/>
    </Window.DataContext>
    <Grid x:Name="MainGrid">
        <Label x:Name="LabelAngleXZ" Content="{Binding AngleXz, ElementName=Window}" Canvas.Left="10" Canvas.Top="10" Foreground="White" Panel.ZIndex="10000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Visibility="Hidden"/>
        <Label x:Name="LabelAngleYZ" Content="{Binding AngleYz, ElementName=Window}" Canvas.Left="10" Canvas.Top="10" Foreground="White" Panel.ZIndex="10000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,30,0,0" Visibility="Hidden"/>
        <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="304" VerticalAlignment="Top" Width="500" ClipToBounds="True" Background="Black" RenderTransformOrigin="0.5,0.5" />
        <ScrollBar x:Name="ScrollBarXZ" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Bottom" Height="12" Width="500" LargeChange="15" Maximum="180" Minimum="-180" SmallChange="5" Orientation="Horizontal" Value="{Binding AngleXz, ElementName=Window, Mode=OneWayToSource}" ValueChanged="Draw"/>
        <ScrollBar x:Name="ScrollBarYZ" HorizontalAlignment="Left" VerticalAlignment="Top" Height="299" Width="12" LargeChange="15" Maximum="180" Minimum="-180" SmallChange="5" Margin="500,0,0,0" Value="{Binding AngleYz, ElementName=Window, Mode=OneWayToSource}" ValueChanged="Draw"/>
        <ComboBox x:Name="ComboBoxGeometry" HorizontalAlignment="Right" Margin="0,7,65,0" VerticalAlignment="Top" Width="130" Height="20" ItemsSource="{Binding Geometry, Mode=OneWay}" SelectedIndex="{Binding SelectedTriangle, Mode=TwoWay}"/>
        <Button x:Name="ButtonAddTriangle" Content="New" HorizontalAlignment="Right" Margin="0,7,10,0" VerticalAlignment="Top" Width="50" Command="{Binding AddTriangleCommand}" Click="Draw" IsEnabled="False"/>
        <Button x:Name="ButtonDeleteTriangle" Content="Delete" HorizontalAlignment="Right" Margin="0,32,10,0" VerticalAlignment="Top" Width="50" Command="{Binding DeleteTriangleCommand}" Click="Draw"/>
        <DataGrid x:Name="DataGridCoordinates" HorizontalAlignment="Right" Margin="0,31,65,0" VerticalAlignment="Top" Height="83" Width="130" AutoGenerateColumns="False" ItemsSource="{Binding SelectedItem.Vertexes, ElementName=ComboBoxGeometry, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" CellEditEnding="Draw">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding X, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Header="X">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="SeparatorBrush" Value="Transparent" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalAlignment"  Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Y, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Header="Y">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="SeparatorBrush" Value="Transparent" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalAlignment"  Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Z, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Header="Z">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="SeparatorBrush" Value="Transparent" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="VerticalAlignment"  Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Color:" HorizontalAlignment="Right" Margin="0,116,154,0" VerticalAlignment="Top"/>
        <ComboBox x:Name="ComboBoxColorPicker" HorizontalAlignment="Right" Margin="0,119,65,0" VerticalAlignment="Top" Width="89" ItemsSource="{Binding myColors}" SelectedValue="{Binding SelectedItem.Color, ElementName=ComboBoxGeometry}" SelectionChanged="Draw"/>
    </Grid>
</Window>